/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module adder_116 (
    input [5:0] alufn,
    input [15:0] a,
    input [15:0] b,
    output reg [15:0] out,
    output reg zOut,
    output reg vOut,
    output reg nOut
  );
  
  
  
  reg zComp;
  
  reg [15:0] result;
  
  reg [15:0] o2;
  
  integer i;
  
  always @* begin
    zOut = 1'h0;
    vOut = 1'h0;
    nOut = 1'h0;
    out = 8'bxxxxxxxx;
    
    case (alufn)
      6'h00: begin
        result = a + b;
        out = result;
        nOut = result[15+0-:1];
        vOut = (a[15+0-:1] & b[15+0-:1] & ~result[15+0-:1]) | (~a[15+0-:1] & ~b[15+0-:1] & result[15+0-:1]);
        zComp = result[0+0-:1];
        for (i = 1'h1; i < 5'h10; i = i + 1) begin
          zComp = (zComp | result[(i)*1+0-:1]);
        end
        zOut = ~zComp;
      end
      6'h01: begin
        o2 = -b;
        result = a + o2;
        out = result;
        nOut = result[15+0-:1];
        vOut = (a[15+0-:1] & o2[15+0-:1] & ~result[15+0-:1]) | (~a[15+0-:1] & ~o2[15+0-:1] & result[15+0-:1]);
        zComp = result[0+0-:1];
        for (i = 1'h1; i < 5'h10; i = i + 1) begin
          zComp = (zComp | result[(i)*1+0-:1]);
        end
        zOut = ~zComp;
      end
    endcase
  end
endmodule

/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module vga_2 (
    input clk,
    input rst,
    output reg o_animate,
    output reg hsync,
    output reg vsync,
    output reg [10:0] x,
    output reg [10:0] y
  );
  
  
  
  localparam H_DISPLAY = 10'h280;
  
  localparam H_L_BORDER = 6'h30;
  
  localparam H_R_BORDER = 5'h10;
  
  localparam H_RETRACE = 7'h60;
  
  localparam H_MAX = 14'h031f;
  
  localparam START_H_RETRACE = 11'h290;
  
  localparam END_H_RETRACE = 13'h02ef;
  
  localparam V_DISPLAY = 9'h1e0;
  
  localparam V_T_BORDER = 4'ha;
  
  localparam V_B_BORDER = 6'h21;
  
  localparam V_RETRACE = 2'h2;
  
  localparam V_MAX = 13'h020c;
  
  localparam START_V_RETRACE = 10'h201;
  
  localparam END_V_RETRACE = 12'h202;
  
  reg [10:0] M_pixel_d, M_pixel_q = 1'h0;
  reg [10:0] M_line_d, M_line_q = 1'h0;
  reg M_pixel_reg_d, M_pixel_reg_q = 1'h0;
  
  reg pixel_tick;
  
  always @* begin
    M_pixel_reg_d = M_pixel_reg_q;
    M_pixel_d = M_pixel_q;
    M_line_d = M_line_q;
    
    M_pixel_reg_d = ~M_pixel_reg_q;
    pixel_tick = (M_pixel_reg_q == 1'h0);
    o_animate = ((M_line_q == 10'h1df) & (M_pixel_q == 10'h280));
    if (M_pixel_q < 10'h280) begin
      x = M_pixel_q;
    end else begin
      x = 1'h0;
    end
    if (M_line_q < 9'h1e0) begin
      y = M_line_q;
    end else begin
      y = 1'h0;
    end
    if (M_pixel_q >= 11'h290 && M_pixel_q <= 13'h02ef) begin
      hsync = 1'h1;
    end else begin
      hsync = 1'h0;
    end
    if (M_line_q >= 10'h201 && M_line_q <= 12'h202) begin
      vsync = 1'h1;
    end else begin
      vsync = 1'h0;
    end
    if (pixel_tick == 1'h1) begin
      if (M_pixel_q == 14'h031f) begin
        if (M_line_q == 13'h020c) begin
          M_line_d = 1'h0;
        end else begin
          M_line_d = M_line_q + 1'h1;
        end
        M_pixel_d = 1'h0;
      end else begin
        M_pixel_d = M_pixel_q + 1'h1;
      end
    end
  end
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_pixel_q <= 1'h0;
      M_line_q <= 1'h0;
      M_pixel_reg_q <= 1'h0;
    end else begin
      M_pixel_q <= M_pixel_d;
      M_line_q <= M_line_d;
      M_pixel_reg_q <= M_pixel_reg_d;
    end
  end
  
endmodule

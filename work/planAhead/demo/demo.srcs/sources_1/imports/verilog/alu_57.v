/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module alu_57 (
    input [5:0] alufn,
    input [15:0] a,
    input [15:0] b,
    output reg [15:0] out_a,
    output reg [15:0] out_b,
    output reg [15:0] alu,
    output reg zOut,
    output reg vOut,
    output reg nOut
  );
  
  
  
  wire [16-1:0] M_adder_out;
  wire [1-1:0] M_adder_zOut;
  wire [1-1:0] M_adder_vOut;
  wire [1-1:0] M_adder_nOut;
  adder_116 adder (
    .a(a),
    .b(b),
    .alufn(alufn),
    .out(M_adder_out),
    .zOut(M_adder_zOut),
    .vOut(M_adder_vOut),
    .nOut(M_adder_nOut)
  );
  wire [16-1:0] M_boolean_out;
  boole_117 boolean (
    .a(a),
    .b(b),
    .alufn(alufn),
    .out(M_boolean_out)
  );
  wire [16-1:0] M_compare_out;
  compare_118 compare (
    .a(a),
    .b(b),
    .alufn(alufn),
    .out(M_compare_out)
  );
  
  wire [16-1:0] M_shifter_out;
  shifter_119 shifter (
    .alufn(alufn),
    .a(a),
    .b(b[0+4-:5]),
    .out(M_shifter_out)
  );
  
  always @* begin
    zOut = 1'h0;
    vOut = 1'h0;
    nOut = 1'h0;
    alu = 16'h0000;
    out_a = a;
    out_b = b;
    
    case (alufn[4+1-:2])
      2'h0: begin
        alu = M_adder_out;
        zOut = M_adder_zOut;
        vOut = M_adder_vOut;
        nOut = M_adder_nOut;
      end
      2'h1: begin
        alu = M_boolean_out;
      end
      2'h2: begin
        alu = M_shifter_out;
      end
      2'h3: begin
        alu = M_compare_out;
      end
    endcase
  end
endmodule

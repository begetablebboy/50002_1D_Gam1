
module square #(
    H_SIZE=80,      // half square width (for ease of co-ordinate calculations)
    IX=320,         // initial horizontal position of square centre
    IY=240,         // initial vertical position of square centre
    IX_DIR=1,       // initial horizontal direction: 1 is right, 0 is left
    IY_DIR=1,       // initial vertical direction: 1 is down, 0 is up
    D_WIDTH=640,    // width of display
    D_HEIGHT=480    // height of display
    )
    (
    input clk,         // base clock
    input rst,         // reset: returns animation to starting position
    input i_animate,     // animate when input is high
    output o_x1[11],  // square left edge: 12-bit value: 0-4095
    output o_x2[11],  // square right edge
    output o_y1[11],  // square top edge
    output o_y2[11]   // square bottom edge
    ) {
    .clk(clk) {
      .rst(rst) {
      dff x[11](#INIT(IX));        // horizontal position of square centre
      dff y[11](#INIT(IY));        // vertical position of square centre
      dff x_dir(#INIT(IX_DIR));    // horizontal animation direction
      dff y_dir(#INIT(IY_DIR));    // vertical animation direction
      dff pixel_reg;
    }
  }
  sig pixel_tick;
  always {
      o_x1 = x.q - H_SIZE;  // left: centre minus half horizontal size
      o_x2 = x.q + H_SIZE;  // right
      o_y1 = y.q - H_SIZE;  // top
      o_y2 = y.q + H_SIZE;  // bottom
      pixel_reg.d = ~pixel_reg.q;
      pixel_tick = (pixel_reg.q == 0);
      if((pixel_tick == 1) && (i_animate == 1)){
            x.d = (x_dir.q) ? x.q + 5 : x.q - 5;  // move left if positive x_dir
            y.d = (y_dir.q) ? y.q + 5 : y.q - 5;  // move down if positive y_dir

            if (x.q <= H_SIZE + 1)  // edge of square is at left of screen
                x_dir.d = 1;  // change direction to right
            if (x.q >= (D_WIDTH - H_SIZE - 1))  // edge of square at right
                x_dir.d = 0;  // change direction to left          
            if (y.q <= H_SIZE + 1)  // edge of square at top of screen
                y_dir.d = 1;  // change direction to down
            if (y.q >= (D_HEIGHT - H_SIZE - 1))  // edge of square at bottom
                y_dir.d = 0;  // change direction to up 
    
    }
  
  }

}